--- origsrc/audacious-plugins-1.5.1/configure.ac	2008-05-23 17:44:19.000000000 -0500
+++ src/audacious-plugins-1.5.1/configure.ac	2008-07-07 22:09:33.468750000 -0500
@@ -211,6 +211,14 @@
 		AUDLDFLAGS=""
 		SHARED_SUFFIX=".dylib"
 		;;
+	*-*-cygwin)
+		AC_MSG_RESULT([Cygwin: -DPIC -shared, .dll])
+		PICFLAGS="-DPIC"
+		PICLDFLAGS="-DPIC -shared"
+		LIBLDFLAGS="-DPIC -shared"
+		AUDLDFLAGS="-Wl,-export-dynamic"
+		SHARED_SUFFIX=".dll"
+		;;
 	*)
 		AC_MSG_RESULT([libdl-compatible: -fPIC -DPIC -shared, .so])
 		PICFLAGS="-fPIC -DPIC"
--- origsrc/audacious-plugins-1.5.1/m4/buildsys.m4	2008-05-23 17:44:19.000000000 -0500
+++ src/audacious-plugins-1.5.1/m4/buildsys.m4	2008-07-07 22:09:33.484375000 -0500
@@ -87,7 +87,22 @@
 			UNINSTALL_LIB='rm -f ${DESTDIR}${libdir}/$$i ${DESTDIR}${libdir}/$$i.${LIB_MAJOR}.${LIB_MINOR}'
 			CLEAN_LIB=''
 			;;
-		*-*-cygwin | *-*-mingw32)
+		*-*-cygwin)
+			AC_MSG_RESULT(Cygwin)
+			LIB_CPPFLAGS='-DPIC'
+			LIB_CFLAGS=''
+			LIB_LDFLAGS='-shared -Wl,--enable-auto-image-base,--out-implib,lib${LIB_NAME}.dll.a'
+			LIB_PREFIX='cyg'
+			LIB_SUFFIX='-${LIB_MAJOR}.dll'
+			PLUGIN_CPPFLAGS=''
+			PLUGIN_CFLAGS=''
+			PLUGIN_LDFLAGS='-shared -Wl,--enable-auto-image-base'
+			PLUGIN_SUFFIX='.dll'
+			INSTALL_LIB='${MKDIR_P} ${DESTDIR}${bindir} && ${INSTALL} -m 755 $$i ${DESTDIR}${bindir}/$$i && ${INSTALL} -m 755 lib${LIB_NAME}.dll.a ${DESTDIR}${libdir}/lib${LIB_NAME}.dll.a'
+			UNINSTALL_LIB='rm -f ${DESTDIR}${bindir}/$$i ${DESTDIR}${libdir}/lib${LIB_NAME}.dll.a'
+			CLEAN_LIB='lib${LIB_NAME}.dll.a'
+			;;
+		*-*-mingw32)
 			AC_MSG_RESULT(Win32)
 			LIB_CPPFLAGS='-DPIC'
 			LIB_CFLAGS=''
--- origsrc/audacious-plugins-1.5.1/src/musepack/Makefile	2008-05-23 17:44:20.000000000 -0500
+++ src/audacious-plugins-1.5.1/src/musepack/Makefile	2008-07-07 22:09:33.500000000 -0500
@@ -9,4 +9,5 @@
 
 CXXFLAGS += ${PLUGIN_CFLAGS}
 CPPFLAGS += ${PLUGIN_CPPFLAGS} ${MOWGLI_CFLAGS}  ${GTK_CFLAGS} ${GLIB_CFLAGS}  ${TAGLIB_CFLAGS} -I../..
+LDFLAGS += -lstdc++
 LIBS += ${TAGLIB_LIBS} ${GTK_LIBS} ${GLIB_LIBS}  ${MOWGLI_LIBS} -lmpcdec
--- origsrc/audacious-plugins-1.5.1/src/tta/Makefile	2008-05-23 17:44:20.000000000 -0500
+++ src/audacious-plugins-1.5.1/src/tta/Makefile	2008-07-07 22:49:28.437500000 -0500
@@ -11,4 +11,4 @@
 CFLAGS += ${PLUGIN_CFLAGS}
 CPPFLAGS += ${PLUGIN_CPPFLAGS} ${MOWGLI_CFLAGS}  ${GTK_CFLAGS} ${GLIB_CFLAGS}  -I../..
 LDFLAGS += ${AUDLDFLAGS}
-LIBS += ${GTK_LIBS} ${GLIB_LIBS}  ${MOWGLI_LIBS} -laudid3tag
+LIBS += -laudid3tag ${GTK_LIBS} ${GLIB_LIBS} ${MOWGLI_LIBS}
--- origsrc/audacious-plugins-1.5.1/src/vtx/ayemu_8912.h	2008-05-23 17:44:20.000000000 -0500
+++ src/audacious-plugins-1.5.1/src/vtx/ayemu_8912.h	2008-07-07 22:09:33.515625000 -0500
@@ -130,7 +130,7 @@
 ayemu_set_chip_type(ayemu_ay_t *ay, ayemu_chip_t chip, int *custom_table);
 
 EXTERN void
-ayemu_set_chip_freq(ayemu_ay_t *ay, int chipfreq);
+ayemu_set_chip_freq(ayemu_ay_t *ay, int32_t chipfreq);
 
 EXTERN int
 ayemu_set_stereo(ayemu_ay_t *ay, ayemu_stereo_t stereo, int *custom_eq);
--- origsrc/audacious-plugins-1.5.1/src/wavpack/libwavpack.cxx	2008-05-23 17:44:20.000000000 -0500
+++ src/audacious-plugins-1.5.1/src/wavpack/libwavpack.cxx	2008-07-07 22:09:33.531250000 -0500
@@ -90,32 +90,32 @@
     wv_probe_for_tuple		// probe for a tuple
 };
 
-gint32 read_bytes (void *id, void *data, gint32 bcount)
+int32_t read_bytes (void *id, void *data, int32_t bcount)
 {
     return aud_vfs_fread (data, 1, bcount, (VFSFile *) id);
 }
 
-guint32 get_pos (void *id)
+uint32_t get_pos (void *id)
 {
     return aud_vfs_ftell ((VFSFile *) id);
 }
 
-gint set_pos_abs (void *id, guint32 pos)
+int set_pos_abs (void *id, uint32_t pos)
 {
     return aud_vfs_fseek ((VFSFile *) id, pos, SEEK_SET);
 }
 
-gint set_pos_rel (void *id, gint32 delta, gint mode)
+int set_pos_rel (void *id, int32_t delta, int mode)
 {
     return aud_vfs_fseek ((VFSFile *) id, delta, mode);
 }
 
-gint push_back_byte (void *id, gint c)
+int push_back_byte (void *id, int c)
 {
     return aud_vfs_ungetc (c, (VFSFile *) id);
 }
 
-guint32 get_length (void *id)
+uint32_t get_length (void *id)
 {
     VFSFile *file = (VFSFile *) id;
     guint32 sz = 0;
@@ -131,12 +131,12 @@
 }
 
 /* XXX streams?? */
-gint can_seek (void *id)
+int can_seek (void *id)
 {
     return 1;
 }
 
-gint32 write_bytes (void *id, void *data, gint32 bcount)
+int32_t write_bytes (void *id, void *data, int32_t bcount)
 {
     return aud_vfs_fwrite (data, 1, bcount, (VFSFile *) id);
 }
@@ -359,7 +359,7 @@
         samples_left = d.num_samples-WavpackGetSampleIndex(d.ctx);
         //AUDDBG("samples left: %d\n", samples_left);
         if (paused == 0) {
-            status = WavpackUnpackSamples(d.ctx, d.input, BUFFER_SIZE);
+            status = WavpackUnpackSamples(d.ctx, (int32_t*)d.input, BUFFER_SIZE);
             if (status == (guint32) -1) {
                 printf("wavpack: Error decoding file.\n");
                 break;
